<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAEAAAABACAYAAACqaXHeAAAABGdBTUEAALGPC/xhBQAABJNJREFUeF7t
        l1toHGUUx+fB+qSCT0ojtjZarFVbm5SV3NxssjG3mjaXNiZNeokJW1srShO0VgiIBtQoCkIRwYeKto2C
        lj4IgoTaUql51Sqi1KZBvFVQq+BD/55T/ltnd3Zn55sZ6+4yP/iRPec758z5YJfsWhERERERERGhUzWG
        RYt3YapiF86I8Kn2PqezOLZ0uFkuv2QnEJLPcmzpULkDC8t2ALemEGfKmMoUEjpjWQrzTJUOy1OAytA3
        Yc254qwYA1SG1guzgIlsc8wpGe4aBVSG1qdHABPZ5phTMqweAVSGvglrTmisHcXKqu14q3o75sW/RbjJ
        Nt/kmpml7jBfPYIDsW24g23/DbEtaIltxR8ivMpW60X5XJvINivXTBd1tyRbwyU2iJtqt+C8iNqt2N8w
        hFvcvqBcqhMZWiflc20i2xxzstEddJe6YbzO2vO6K4/Do2EYh+RBEA8z5Qpr8y7uFZM5923GDOsPMhUO
        jYNoatwMiL8lhlHBtCtS+732xIdRx5QxiQE08LkLTLmiu0nt79qTGEKC6WDoWyw5iC+SA0DLgxhnuiAt
        g5jSnpD0/FVYdp1gz+eh/IZolUuLEE/39eFqpguiD5eeKfFH9vvxB9Hox5DuKD1fan9bP/Yw7Y/1/Vja
        uQl/ihfX9fl/K19pOvpRrzuLF/QOTJvTtRHvihDfYapk6NqEg9x9hikzentR39MLiBe6u7GE6ZJBd9bd
        xYvysTB/927swRER5WBfD97ntbwz0I2fRZSJP/Fa3hlaD6gM81IudQ62dQEqw7yUS52Dh9YBKsO8lEud
        g1QnoDLMS7nUOdjZjl9FPBzHNUw5eKQN12lNCdT9wpR3Hm3DcRG729HFlIPdrdigNcVeJzXHmPLO4/dj
        VIR4+okOXM/0ZTQnZ1+xpqjrHmvFCNPemZQfFRMtOClC/G6iFd0TD+BafVvtSWKD5L7Ws/EkTsnfuWKt
        E0/oXXgtM8bjuPHJZhwXkcdTE0ksfiqBCnk9l3Vm93+p29uMT/Y24QZexx9jVVi0rwmgf9HP9jVjdDKO
        q1hm6eunmzEm+bkiqLu0r70uEJONMkxkWPSEvu8zcUBlWPSEvu9UA6AyLHpC3/f5ekBlWPSEvu9LtYDK
        0JquQ6fE36bzWX4zXYt2llov16BDcvlq3cyYY/LMdJ5hcF6pAVSG1qs1OJvO5fEMS73Uumky53JtOscw
        OK/dC6gMHbGdILV2ss/CqvXF/higMnTEdoLU2sk+C6vWF2+sBVSGjthOkFo72Wdh1frizWpAZeiI7QSp
        tZN9FlatLw6sAVSGjthOkFo72Wdh1fri7XsAlaHG59K5PJ5lqaPXjsmZvA7lmb44vApQGVozq9Ap8UI6
        n+W5Q6v//Z+czjPMwOQsrGf64r27AZWhEW69fs8KEaQ3Jx/cCagMjXDr9XtWiCC9OTm6EggqR2Xg5SyI
        HBWcD1cAQeWoDLycBZGjgvPR7YA6PWtuupejMvBylmtmId3m+uLj5YA6e9TcdC9HZeDlLNfMQrrNNeLY
        bUA5yOuYc6ISKAd5nYiIiIiIiAg7lvUPizEIK4DJtd4AAAAASUVORK5CYII=
</value>
  </data>
</root>