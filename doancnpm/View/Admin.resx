<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="backgroundWorker1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAEAAAABACAYAAACqaXHeAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAASTSURBVHhe7ZdbaBxlFMfnwfqkgk9KI7Y2WqxVW5uUldzcbLIxt5o2lzYmTXqJCVtbK0oTtFYI
        iAbUKApCEcGHiraNgpY+CIKE2lKpedUqotSmQbxVUKvgQ/+eU/5bZ3d2Z+ebGevuMj/4kT3nO+fM+WCX
        7FoRERERERERoVM1hkWLd2GqYhfOiPCp9j6nszi2dLhZLr9kJxCSz3Js6VC5AwvLdgC3phBnypjKFBI6
        Y1kK80yVDstTgMrQN2HNueKsGANUhtYLs4CJbHPMKRnuGgVUhtanRwAT2eaYUzKsHgFUhr4Ja05orB3F
        yqrteKt6O+bFv0W4yTbf5JqZpe4wXz2CA7FtuINt/w2xLWiJbcUfIrzKVutF+VybyDYr10wXdbckW8Ml
        NoibarfgvIjardjfMIRb3L6gXKoTGVon5XNtItscc7LRHXSXumG8ztrzuiuPw6NhGIfkQRAPM+UKa/Mu
        7hWTOfdtxgzrDzIVDo2DaGrcDIi/JYZRwbQrUvu99sSHUceUMYkBNPC5C0y5ortJ7e/akxhCgulg6Fss
        OYgvkgNAy4MYZ7ogLYOY0p6Q9PxVWHadYM/nofyGaJVLixBP9/XhaqYLog+XninxR/b78QfR6MeQ7ig9
        X2p/Wz/2MO2P9f1Y2rkJf4oX1/X5fytfaTr6Ua87ixf0Dkyb07UR74oQ32GqZOjahIPcfYYpM3p7Ud/T
        C4gXuruxhOmSQXfW3cWL8rEwf/du7MEREeVgXw/e57W8M9CNn0WUiT/xWt4ZWg+oDPNSLnUOtnUBKsO8
        lEudg4fWASrDvJRLnYNUJ6AyzEu51DnY2Y5fRTwcxzVMOXikDddpTQnU/cKUdx5tw3ERu9vRxZSD3a3Y
        oDXFXic1x5jyzuP3Y1SEePqJDlzP9GU0J2dfsaao6x5rxQjT3pmUHxUTLTgpQvxuohXdEw/gWn1b7Uli
        g+S+1rPxJE7J37lirRNP6F14LTPG47jxyWYcF5HHUxNJLH4qgQp5PZd1Zvd/qdvbjE/2NuEGXscfY1VY
        tK8JoH/Rz/Y1Y3QyjqtYZunrp5sxJvm5Iqi7tK+9LhCTjTJMZFj0hL7vM3FAZVj0hL7vVAOgMix6Qt/3
        +XpAZVj0hL7vS7WAytCarkOnxN+m81l+M12LdpZaL9egQ3L5at3MmGPyzHSeYXBeqQFUhtarNTibzuXx
        DEu91LppMudybTrHMDiv3QuoDB2xnSC1drLPwqr1xf4YoDJ0xHaC1NrJPgur1hdvrAVUho7YTpBaO9ln
        YdX64s1qQGXoiO0EqbWTfRZWrS8OrAFUho7YTpBaO9lnYdX64u17AJWhxufSuTyeZamj147JmbwO5Zm+
        OLwKUBlaM6vQKfFCOp/luUOr//2fnM4zzMDkLKxn+uK9uwGVoRFuvX7PChGkNycf3AmoDI1w6/V7Vogg
        vTk5uhIIKkdl4OUsiBwVnA9XAEHlqAy8nAWRo4Lz0e2AOj1rbrqXozLwcpZrZiHd5vri4+WAOnvU3HQv
        R2Xg5SzXzEK6zTXi2G1AOcjrmHOiEigHeZ2IiIiIiIgIO5b1D4sxCCuAybXeAAAAAElFTkSuQmCC
</value>
  </data>
  <metadata name="$this.TrayHeight" type="System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>45</value>
  </metadata>
</root>